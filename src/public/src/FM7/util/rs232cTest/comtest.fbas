##SYMFILE	COMTESTM.sym

WIDTH 80,25
CLEAR ,&H1FFF
DEFINT A-Z

LOADM "COMTESTM"
' RS232C IRQ must be masked, or it will go crazy when a byte is received outside of polling loop.
POKE &HFD02,0
EXEC &&RS232C_OPEN&&

MSG$="Hello from FM-7!"
GOSUB $$SENDSTRING
GOSUB $$SENDCRLF
GOSUB $$PRINTMENU

BUFADDR=&H4000
BUFSIZE=&H1000


$$MAINLOOP
GOSUB $$RECEIVESTRING:R$=MSG$
MSG$="PING!"
GOSUB $$SENDSTRING:GOSUB $$SENDCRLF
IF LEFT$(R$,1)<>"Q" THEN $$MAINLOOP
EXEC &&RS232C_CLOSE&&
END


$$PRINTMENU
PRINT "Send Text from Host.  'QQQ' to terminate."
RETURN


$$RECEIVESTRING
PRINT "WAITING FOR A STRING TO COME"
BUFADDR=&H4000
BUFSIZE=&H1000
BUFUSED=0
POKE &&RS232C_RECEIVE_BUFFER_BEGIN&&  ,PEEK(VARPTR(BUFADDR))
POKE &&RS232C_RECEIVE_BUFFER_BEGIN&&+1,PEEK(VARPTR(BUFADDR)+1)
POKE &&RS232C_RECEIVE_BUFFER_SIZE&&  ,PEEK(VARPTR(BUFSIZE))
POKE &&RS232C_RECEIVE_BUFFER_SIZE&&+1,PEEK(VARPTR(BUFSIZE)+1)
EXEC &&RS232C_RECEIVE_ASCII&&

POKE VARPTR(BUFUSED)  ,PEEK(&&RS232C_RECEIVE_BUFFER_USED&&)
POKE VARPTR(BUFUSED)+1,PEEK(&&RS232C_RECEIVE_BUFFER_USED&&+1)

IF BUFUSED=0 THEN PRINT "NOTHING RECEIVED.":RETURN

PRINT "RECEIVED ";BUFUSED;" BYTES"
MSG$=""
FOR I=0 TO BUFUSED-1
MSG$=MSG$+CHR$(PEEK(BUFADDR+I))
NEXT
PRINT "RECEIVED:";MSG$
RETURN 



$$SENDBINARY
POKE &&RS232C_SEND_BUFFER_BEGIN&&  ,PEEK(VARPTR(BUFADDR))
POKE &&RS232C_SEND_BUFFER_BEGIN&&+1,PEEK(VARPTR(BUFADDR)+1)
POKE &&RS232C_SEND_BUFFER_SIZE&&  ,PEEK(VARPTR(BUFSIZE))
POKE &&RS232C_SEND_BUFFER_SIZE&&+1,PEEK(VARPTR(BUFSIZE)+1)
EXEC &&RS232C_SEND_BINARY&&
RETURN



$$SENDASCIIDUMP
POKE &&RS232C_SEND_BUFFER_BEGIN&&  ,PEEK(VARPTR(BUFADDR))
POKE &&RS232C_SEND_BUFFER_BEGIN&&+1,PEEK(VARPTR(BUFADDR)+1)
POKE &&RS232C_SEND_BUFFER_SIZE&&  ,PEEK(VARPTR(BUFSIZE))
POKE &&RS232C_SEND_BUFFER_SIZE&&+1,PEEK(VARPTR(BUFSIZE)+1)
EXEC &&RS232C_SEND_ASCII&&
RETURN



$$SENDCRLF
EXEC &&RS232C_SEND_CRLF&&
RETURN



$$SENDSTRING
REM MSG$, BUFADDR
BUFADDR=&H3B00
FOR I=1 TO LEN(MSG$)
POKE BUFADDR+I-1,ASC(MID$(MSG$,I,1))
NEXT
BUFSIZE=LEN(MSG$)
POKE &&RS232C_SEND_BUFFER_BEGIN&&  ,PEEK(VARPTR(BUFADDR))
POKE &&RS232C_SEND_BUFFER_BEGIN&&+1,PEEK(VARPTR(BUFADDR)+1)
POKE &&RS232C_SEND_BUFFER_SIZE&&  ,PEEK(VARPTR(BUFSIZE))
POKE &&RS232C_SEND_BUFFER_SIZE&&+1,PEEK(VARPTR(BUFSIZE)+1)
EXEC &&RS232C_SEND_BINARY&&
RETURN
